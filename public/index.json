[{"authors":["admin"],"categories":null,"content":"I am a freelancer applying Data Science using R. I studied engineering and economics and have an advanced university degree, which is called Dipl.-Ing. oec. from the Technical University Hamburg. The degree is equivalent to an Masters degree (engineering \u0026amp; economics) today. I started using R during my advanced statistics courses and instantly fell in love with it. For my thesis I used R to train partial recurrent neural networks for time series forecasting. Since then I never stopped using R for Machine Learning \u0026amp; Data Science, now working as freelancer.\nI believe that interacting with other programmers is fundamental to improving your skills. I constantly visit R conferences (UseR! 2017 Brussels, eRum2018 Budapest and SatRday 2019 in Berlin) to learn new skills and meet with other R developers.\nIn the past years my projects focused around tidal data and offshore windenergy.\nIn my spare time I work on Mobile Apps with Java and recently Dart using the Flutter Framework.\nFurthermore I like do any kind of sports and recently started doing yoga.\n","date":1562284800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1562339276,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am a freelancer applying Data Science using R. I studied engineering and economics and have an advanced university degree, which is called Dipl.-Ing. oec. from the Technical University Hamburg. The degree is equivalent to an Masters degree (engineering \u0026amp; economics) today. I started using R during my advanced statistics courses and instantly fell in love with it. For my thesis I used R to train partial recurrent neural networks for time series forecasting.","tags":null,"title":"Moritz Mueller-Navarra","type":"authors"},{"authors":null,"categories":null,"content":" Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":" Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":null,"content":"","date":1562457600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562457600,"objectID":"38befd29e6c76b8c94b6a4c3580b2944","permalink":"/project/offcast-project/","publishdate":"2019-07-07T00:00:00Z","relpermalink":"/project/offcast-project/","section":"project","summary":"A shiny web app that shows forecasts for offshore windenergy","tags":["Forecasting"],"title":"Offcast","type":"project"},{"authors":null,"categories":null,"content":"","date":1562457600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562457600,"objectID":"53b95960201625654a4e617f5d7ab1a2","permalink":"/project/prowea-project/","publishdate":"2019-07-07T00:00:00Z","relpermalink":"/project/prowea-project/","section":"project","summary":"Assessing the power output for offshore wind farms","tags":["offshore"],"title":"ProWEA","type":"project"},{"authors":null,"categories":null,"content":"","date":1562457600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562457600,"objectID":"52547d59ddc869525d028665786d5a02","permalink":"/project/tidecurves-project/","publishdate":"2019-07-07T00:00:00Z","relpermalink":"/project/tidecurves-project/","section":"project","summary":"Generating tide curves from observations (R package)","tags":["R package","tides"],"title":"TideCurves","type":"project"},{"authors":null,"categories":null,"content":"","date":1562457600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562457600,"objectID":"3ce63819f9a4c754c7e4df6675d38167","permalink":"/project/tidetables-project/","publishdate":"2019-07-07T00:00:00Z","relpermalink":"/project/tidetables-project/","section":"project","summary":"Generating tide tables from observations (R package)","tags":["R package","tides"],"title":"TideTables","type":"project"},{"authors":["Moritz Mueller-Navarra"],"categories":[],"content":"\rThe first real post and already a shameless plug for my R course on https://www.udemy.com …\rAs I just uploaded the course I thought, you might be interested in taking this course,\rwhere I talk about the basics of R for beginners. Unfortunately the course is in german for now,\rbut I am going to add english subtitles as soon as I figured out how to correctly use Amazon Transcribe with R to generate german subtitles with a timestamp, which I can then translate into english. I will post more on this topic later this week. Back to the course, as this is a plug for it ;-)\nI mainly teach:\n\rBasics of the R language\rIntro to tidyverse\rIntro to data.table\rPlots (base, ggplot2, plotly)\rIntro to shiny\r\rAs for as I know data.table has been unrecognized (correct me if I am wrong) by most of the instructors of udemy who are teaching R, despite being one of the best package for R! I cover the basics of the package. If you need an intro to data.table, consider taking my course :-).\nMost of the code you will encounter on this blog will start with\nlibrary(data.table)\rAnyway, you finde my course under this link: https://www.udemy.com/r-basics-u/, it is called\nR Basics - Programmierung und Datenanalyse. Using this link you get the course for 9.99$\rhttps://www.udemy.com/r-basics-u/?couponCode=WELCOME_R_KURS, limited to the first 50 subscribers!\nSee you soon!\nMoritz\n","date":1562284800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562339053,"objectID":"2e164069e624fede569bf787cb5527b7","permalink":"/post/new-r-course-on-udemy-com/","publishdate":"2019-07-05T00:00:00Z","relpermalink":"/post/new-r-course-on-udemy-com/","section":"post","summary":"The first real post and already a shameless plug for my R course on https://www.udemy.com …\rAs I just uploaded the course I thought, you might be interested in taking this course,\rwhere I talk about the basics of R for beginners. Unfortunately the course is in german for now,\rbut I am going to add english subtitles as soon as I figured out how to correctly use Amazon Transcribe with R to generate german subtitles with a timestamp, which I can then translate into english.","tags":["R","R course"],"title":"NEW R COURSE ON UDEMY","type":"post"},{"authors":["Moritz Mueller-Navarra"],"categories":[],"content":"\rAmazon Transcribe \u0026amp; R\rHi, in this post, I will show you some ideas on how to generate subtitles with a time stamp using R and Amazon Transcribe. At first you need a mp3 file, or like in my case, 139. If you want to use this code, you need to set up an aws (Amazon Web Services) account, which might cost you money, depending on how much you use the services. There is a free tier available on aws, but be careful when using this code! You need and iam role that has access to an s3 folder and is allowed to use Amazon Transcribe.\nIn my case I actually have mp4 video files. I generated the mp3 files with the beautiful ffmpeg. We are not going to cover that in this post, rather showing you the R code for communicating with Amazon S3 and Amazon Transcribe. Your end goal is to create a VTT file, which looks like this:\n1\r00:00:01,000 --\u0026gt; 00:00:06,000\rWillkommen zur ersten Lektion Einf?hrungen er Vektoren und Tim Wir\r2\r00:00:06,000 --\u0026gt; 00:00:11,000\rbesprechen zun?chst die variablen Definition Ich habe euch hier ein\r3\r00:00:11,000 --\u0026gt; 00:00:17,000\rkleines Skript vorbereitet, indem wir der variable A den Wert\r4\r00:00:17,000 --\u0026gt; 00:00:22,000\reins zuordnen im zweiten Schritt die variable A um den\rIf you understand german, you will notice that there are a few errors. It is not too bad though.\nNow let us jump into the code!\nLoad packages\rlibrary(data.table)\rlibrary(aws.s3)\rlibrary(aws.transcribe)\rlibrary(rjson)\rWe use data.table for some data wrangling, aws.3 \u0026amp; aws.transcribe to communicate with aws and rjson to handle json. Thanks to all package developers!\n\rList files \u0026amp; upload\r#define file path where your mp3 live\r#replace \u0026quot;yourpath\u0026quot; with your path\rfile_path \u0026lt;- file.path(\u0026quot;yourpath\u0026quot;)\r#List files mp3 in your folder\rpath_mp3 \u0026lt;- list.files(file_path, pattern = \u0026quot;.mp3\u0026quot;,\rfull.names = TRUE)\r#basename returns only the file name\rfiles_mp3 \u0026lt;- basename(path_files_mp3)\rNow we upload the mp3 to a s3-bucket\n#define key and secret for your s3 bucket\r#Do not store your key \u0026amp; secret this way\rkey \u0026lt;- \u0026quot;yourkey\u0026quot;\rsecret \u0026lt;- \u0026quot;yoursecret\u0026quot;\r#upload files to s3 bucket\rfor(i in seq_along(path_mp3)) {\rprint(i)\raws.s3::put_object(file = path_mp3[i], object = files_mp3[i], bucket = \u0026quot;yourbucket\u0026quot;, key = key, secret = secret)\r}\r\rStart a transcribe job\rFirst we need to understand what the package aws.transcribe does.\rWe need the start_transcription function\naws.transcribe::start_transcription\r## function (name, url, format = tools::file_ext(url), language = \u0026quot;en-US\u0026quot;, ## hertz = NULL, ...) ## {\r## bod \u0026lt;- list(Media = list(MediaFileUri = url))\r## bod$MediaFormat \u0026lt;- format\r## bod$LanguageCode \u0026lt;- language\r## if (!is.null(hertz)) {\r## bod$MediaSampleRateHertz \u0026lt;- hertz\r## }\r## bod$TranscriptionJobName \u0026lt;- name\r## transcribeHTTP(action = \u0026quot;StartTranscriptionJob\u0026quot;, body = bod, ## ...)\r## }\r## \u0026lt;bytecode: 0x0000000015b96340\u0026gt;\r## \u0026lt;environment: namespace:aws.transcribe\u0026gt;\rThe main takeaway here is that we define a list bod and then call the transcribeHTTP function. We can check the Amazon Transcribe documentation to understand, how we should define a request body which is called bod in this function.\nhttps://docs.aws.amazon.com/de_de/transcribe/latest/dg/API_StartTranscriptionJob.html\nSince I want to define the OutputBucketName, because we are going to write the actual transcribes (json) to a specific bucket, simply add an argument to the start_transcription function. I call the new function StartTranscription.\nStartTranscription \u0026lt;- function (name, url, format = tools::file_ext(url), language = \u0026quot;en-US\u0026quot;, hertz = NULL, outputbucketname = \u0026quot;yourbucketname\u0026quot;, ...) {\rbod \u0026lt;- list(Media = list(MediaFileUri = url))\rbod$MediaFormat \u0026lt;- format\rbod$LanguageCode \u0026lt;- language\rbod$OutputBucketName \u0026lt;- outputbucketname # added\rif (!is.null(hertz)) {\rbod$MediaSampleRateHertz \u0026lt;- hertz\r}\rbod$TranscriptionJobName \u0026lt;- name\rtranscribeHTTP(action = \u0026quot;StartTranscriptionJob\u0026quot;, body = bod, ...)\r}\rThe transcribeHTTP function is a bit more complex.\naws.transcribe::transcribeHTTP\r## function (action, query = list(), body = NULL, version = \u0026quot;v1\u0026quot;, ## region = NULL, key = NULL, secret = NULL, session_token = NULL, ## ...) ## {\r## d_timestamp \u0026lt;- format(Sys.time(), \u0026quot;%Y%m%dT%H%M%SZ\u0026quot;, tz = \u0026quot;UTC\u0026quot;)\r## if (is.null(region) || region == \u0026quot;\u0026quot;) {\r## region \u0026lt;- \u0026quot;us-east-1\u0026quot;\r## }\r## url \u0026lt;- paste0(\u0026quot;https://transcribe.\u0026quot;, region, \u0026quot;.amazonaws.com\u0026quot;)\r## Sig \u0026lt;- signature_v4_auth(datetime = d_timestamp, region = region, ## service = \u0026quot;transcribe\u0026quot;, verb = \u0026quot;POST\u0026quot;, action = \u0026quot;/\u0026quot;, ## query_args = query, canonical_headers = list(host = paste0(\u0026quot;transcribe.\u0026quot;, ## region, \u0026quot;.amazonaws.com\u0026quot;), `x-amz-date` = d_timestamp, ## `X-Amz-Target` = paste0(\u0026quot;Transcribe.\u0026quot;, action), `Content-Type` = \u0026quot;application/x-amz-json-1.1\u0026quot;), ## request_body = if (is.null(body)) ## \u0026quot;\u0026quot;\r## else toJSON(body, auto_unbox = TRUE), key = key, secret = secret, ## session_token = session_token)\r## headers \u0026lt;- list()\r## headers[[\u0026quot;X-Amz-Target\u0026quot;]] \u0026lt;- paste0(\u0026quot;Transcribe.\u0026quot;, action)\r## headers[[\u0026quot;Content-Type\u0026quot;]] \u0026lt;- \u0026quot;application/x-amz-json-1.1\u0026quot;\r## headers[[\u0026quot;x-amz-date\u0026quot;]] \u0026lt;- d_timestamp\r## headers[[\u0026quot;x-amz-content-sha256\u0026quot;]] \u0026lt;- Sig$BodyHash\r## if (!is.null(session_token) \u0026amp;\u0026amp; session_token != \u0026quot;\u0026quot;) {\r## headers[[\u0026quot;x-amz-security-token\u0026quot;]] \u0026lt;- session_token\r## }\r## headers[[\u0026quot;Authorization\u0026quot;]] \u0026lt;- Sig[[\u0026quot;SignatureHeader\u0026quot;]]\r## H \u0026lt;- do.call(add_headers, headers)\r## if (length(query)) {\r## r \u0026lt;- POST(url, H, query = query, body = body, encode = \u0026quot;json\u0026quot;, ## ...)\r## }\r## else {\r## r \u0026lt;- POST(url, H, body = body, encode = \u0026quot;json\u0026quot;, ...)\r## }\r## if (http_error(r)) {\r## x \u0026lt;- fromJSON(content(r, \u0026quot;text\u0026quot;, encoding = \u0026quot;UTF-8\u0026quot;))\r## warn_for_status(r)\r## h \u0026lt;- headers(r)\r## out \u0026lt;- structure(x, headers = h, class = \u0026quot;aws_error\u0026quot;)\r## attr(out, \u0026quot;request_canonical\u0026quot;) \u0026lt;- Sig$CanonicalRequest\r## attr(out, \u0026quot;request_string_to_sign\u0026quot;) \u0026lt;- Sig$StringToSign\r## attr(out, \u0026quot;request_signature\u0026quot;) \u0026lt;- Sig$SignatureHeader\r## }\r## else {\r## out \u0026lt;- try(fromJSON(content(r, \u0026quot;text\u0026quot;, encoding = \u0026quot;UTF-8\u0026quot;)), ## silent = TRUE)\r## if (inherits(out, \u0026quot;try-error\u0026quot;)) {\r## out \u0026lt;- structure(content(r, \u0026quot;text\u0026quot;, encoding = \u0026quot;UTF-8\u0026quot;), ## \u0026quot;unknown\u0026quot;)\r## }\r## }\r## return(out)\r## }\r## \u0026lt;bytecode: 0x000000001365dfc0\u0026gt;\r## \u0026lt;environment: namespace:aws.transcribe\u0026gt;\rWe call this function inside StartTranscription with action = \"StartTransciptionJob and body = bod. We use the ... argument to pass our secret and key, which are then passed to the POST function from the httrpackage. If you want more information on how to send requests to aws, please read up on https://docs.aws.amazon.com/de_de/transcribe/latest/dg/CommonParameters.html and https://docs.aws.amazon.com/de_de/general/latest/gr/signature-version-4.html. Thanks to Thomas J. Leeper (aws.s3 \u0026amp; aws.transcribe) that we do not have to fiddle with that for now!\nNow i am defining a url, which points to the s3 bucket where I want to save the transcribes as json.\nfull_url \u0026lt;- paste0(\u0026quot;https://s3.eu-central-1.amazonaws.com/yourbucket/\u0026quot;, files_mp3)\rStart transcription\rWe use files_mp3 as the job name. Please change language and region to your desired values. I simply loop along the vector full_url. I added a Sys.sleep, because i do not want to trigger aws by sending too many requests. I am sure you can get away with way shorter timings. Change the value and test different timings.\nfor(i in seq_along(full_url)) {\rStartTranscription(name = files_mp3[i], language = \u0026quot;de-DE\u0026quot;, url = full_url[i], key = \u0026quot;yourkey\u0026quot;,\rsecret = \u0026quot;yoursecret\u0026quot;, region = \u0026quot;eu-central-1\u0026quot;\r)\rSys.sleep(time = 60)\rpaste(i)\r}\rYou can check the progress in your Amazon Transcribe console.\n\r\rDownload the json files\rI actually need vtt files, because most video editing software are using this file type to include transcriptions. I wrote three helper functions to deal with downloading, formatting the json files and generate vtt files.\nFunctions\rThe first function DownloadTransJson calls FormatJsonObject and WriteVtt after listing and downloading the files from the bucket where we wrote the json files to.\nDownloadTransJson \u0026lt;- function(){\rlist_bucket \u0026lt;- data.table::rbindlist(aws.s3::get_bucket(\rbucket = \u0026quot;yourbucket\u0026quot;, key = \u0026quot;yourkey\u0026quot;, secret = \u0026quot;yoursecret\u0026quot;))\r#only the json files\rlist_bucket \u0026lt;- grep(x = list_bucket$Key, pattern = \u0026quot;mp3.json\u0026quot;, value = TRUE)\r#download files in list_bucket\rfor(i in list_bucket) {\rjson_object \u0026lt;- aws.s3::get_object(object =i,\rbucket = \u0026quot;yourbucket\u0026quot;, key = \u0026quot;yourkey\u0026quot;, secret = \u0026quot;yoursecret\u0026quot;)\rformatted_json \u0026lt;- FormatJsonObject(jsonobject = json_object)\rWriteVtt(i, formatted_json)\r}\r}\rThe FormatJsonObject function formats the response we get from aws.s3::getobject.\nFormatJsonObject \u0026lt;- function(jsonobject){\rtrans_00 \u0026lt;- rjson::fromJSON(rawToChar(jsonobject))\rtranscript \u0026lt;- trans_00$results$transcripts[[1]]$transcript\r#split words\rwords \u0026lt;- unlist(strsplit(transcript, split = \u0026quot; \u0026quot;))\r#bind the list items\rtiming_dt \u0026lt;- rbindlist(trans_00$results$items, fill = TRUE)\r#Getting rid of punctuation for now\rtiming_dt \u0026lt;- timing_dt[type != \u0026quot;punctuation\u0026quot;]\rtiming_dt[, word := words]\r#simple conversion to numeric\rtiming_dt[, start_time := as.numeric(start_time)]\rtiming_dt[, end_time := as.numeric(end_time)]\r#define a group for every ten words\r#so that ten words form a group\rtiming_dt[, group := (1:.N - 1) %/% 10]\r#Collapse word to a phrase by group\rtiming_dt[, phrase := lapply(.SD, paste, collapse = \u0026quot; \u0026quot;), by = group, .SDcols = \u0026quot;word\u0026quot;]\r#get min start_time and max start time for a phrase\rtiming_dt[, `:=` (min_start_time = min(start_time), max_end_time = max(end_time)), by = \u0026quot;group\u0026quot;]\r#Need only one phrase per group, as they are redundant.\runique_dt \u0026lt;- timing_dt[, .SD[1], by = \u0026quot;group\u0026quot;]\runique_dt \u0026lt;- unique_dt[,.SD, .SDcols = c(\u0026quot;phrase\u0026quot;, \u0026quot;min_start_time\u0026quot;, \u0026quot;max_end_time\u0026quot;)]\r#\runique_dt[, time_stamp := paste(paste0(as.ITime(min_start_time),\u0026quot;,000\u0026quot;), paste0(as.ITime(max_end_time),\u0026quot;,000\u0026quot;), sep = \u0026quot; --\u0026gt; \u0026quot;)]\rreturn(unique_dt)\r}\rAnd now simply write a file per transcription as VTT.\nWriteVtt \u0026lt;- function(name, jsondt) {\rfile.create(paste0(name,\u0026quot;.VTT\u0026quot;))\rcon_file \u0026lt;- file(paste0(name,\u0026quot;.VTT\u0026quot;))\r##writing to vtt\r#might be os specific\rwriteLines(paste0(1 : nrow(jsondt),\u0026quot;\\n\u0026quot;,\rjsondt$time_stamp,\u0026quot;\\n\u0026quot;,\rjsondt$phrase,\u0026quot;\\n\u0026quot;), con_file)\r}\rNow we actually call the function.\nDownloadTransJson()\rDone? Not quite. You now need to check your transciptions. Did Amazon Transcribe understand what your were saying? Unfortunately not in every case. It seems like mixing german with english, as I did not “translate” english R expressions into german, is problematic. I am sure it works way better, when you are trying to transcribe english. What are your experiences with Amazon Transcribe ?\nI know one can define a vocabulary to improve the job, which I am going to try for sure!\nAnyways, i hope you can take something away from this post.\nHave a great day!\rMoritz\n\r\r\r","date":1562284800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562339276,"objectID":"39fdf4732ce4916017eea40abbf1776a","permalink":"/post/using-amazon-transcribe-with-r/","publishdate":"2019-07-05T00:00:00Z","relpermalink":"/post/using-amazon-transcribe-with-r/","section":"post","summary":"Amazon Transcribe \u0026amp; R\rHi, in this post, I will show you some ideas on how to generate subtitles with a time stamp using R and Amazon Transcribe. At first you need a mp3 file, or like in my case, 139. If you want to use this code, you need to set up an aws (Amazon Web Services) account, which might cost you money, depending on how much you use the services.","tags":["R","aws","aws transcribe","cloud"],"title":"USING AMAZON TRANSCRIBE WITH R","type":"post"},{"authors":[],"categories":[],"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"}]